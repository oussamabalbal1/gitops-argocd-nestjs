apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.postgres.statefulset.name }}
  labels:
    app: {{ .Values.postgres.statefulset.name }}
spec:
  serviceName: {{ .Values.postgres.service.name }}
  replicas: {{ .Values.postgres.statefulset.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.postgres.statefulset.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.statefulset.name }}
    spec:
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: {{ .Values.postgres.pvc.name }}
      containers:
      - name: {{ .Values.postgres.statefulset.name }}
        image: {{ .Values.postgres.statefulset.image }}
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        env:
        {{- range .Values.postgres.statefulset.variables}}
        - name: {{ . }}
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.postgres.secret.name }} #to go back to the root 
              key: {{ . }}
        {{- end}}
        ports:
        - containerPort: {{ .Values.postgres.statefulset.port }}
      - name: {{ .Values.postgres.statefulset.sidecar.name }}
        image: {{ .Values.postgres.statefulset.sidecar.image }}
        env:
            - name: DATA_SOURCE_NAME
              value: "postgresql://oussama:oussama@localhost:5432/oussama?sslmode=disable"
        ports:
            - containerPort: {{ .Values.postgres.statefulset.sidecar.port }}
  # volumeClaimTemplates:
  # - metadata:
  #     name: {{ .Values.postgres.pvc.name }}
  #   spec:
  #     accessModes: ["ReadWriteOnce"]
  #     storageClassName: {{ .Values.postgres.pvc.storageclass }}
  #     resources:
  #       requests:
  #         storage: {{ .Values.postgres.pvc.storage }}
